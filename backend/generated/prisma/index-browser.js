
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.8.2
 * Query Engine version: 2060c79ba17c6bb9f5823312b6f6b7f4a845738e
 */
Prisma.prismaVersion = {
  client: "6.8.2",
  engine: "2060c79ba17c6bb9f5823312b6f6b7f4a845738e"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UsersScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  password: 'password',
  profile_photo: 'profile_photo',
  role_id: 'role_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.RolesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Farm_WorkersScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id'
};

exports.Prisma.VeterinariansScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id'
};

exports.Prisma.AnimalsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  species_id: 'species_id',
  breed_id: 'breed_id',
  birth_date: 'birth_date',
  weight: 'weight',
  health_status_id: 'health_status_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SpeciesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  average_lifespan: 'average_lifespan',
  gestation_period: 'gestation_period',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.BreedsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  species_id: 'species_id',
  average_weight: 'average_weight',
  productivity: 'productivity',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Health_StatusScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.VaccinesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  target_disease: 'target_disease',
  manufacturer_id: 'manufacturer_id',
  batch: 'batch',
  expiration_date: 'expiration_date',
  required_doses: 'required_doses',
  dosing_interval: 'dosing_interval',
  type_of_vaccine_id: 'type_of_vaccine_id',
  notes: 'notes',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ManufacturersScalarFieldEnum = {
  id: 'id',
  name: 'name',
  cnpj: 'cnpj',
  email: 'email',
  phone: 'phone',
  address: 'address',
  country: 'country',
  license_number: 'license_number',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Types_of_VaccinesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description'
};

exports.Prisma.ApplicationsScalarFieldEnum = {
  id: 'id',
  animal_id: 'animal_id',
  vaccine_id: 'vaccine_id',
  veterinary_id: 'veterinary_id',
  application_date: 'application_date',
  next_application_date: 'next_application_date',
  status_vaccine_application_id: 'status_vaccine_application_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Status_Vaccine_ApplicationsScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.LocationsScalarFieldEnum = {
  id: 'id',
  animal_id: 'animal_id',
  latitude: 'latitude',
  longitude: 'longitude',
  captured_at: 'captured_at',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.UsersOrderByRelevanceFieldEnum = {
  name: 'name',
  email: 'email',
  password: 'password',
  profile_photo: 'profile_photo'
};

exports.Prisma.RolesOrderByRelevanceFieldEnum = {
  name: 'name',
  description: 'description'
};

exports.Prisma.AnimalsOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.SpeciesOrderByRelevanceFieldEnum = {
  name: 'name',
  description: 'description'
};

exports.Prisma.BreedsOrderByRelevanceFieldEnum = {
  name: 'name',
  description: 'description',
  productivity: 'productivity'
};

exports.Prisma.Health_StatusOrderByRelevanceFieldEnum = {
  name: 'name',
  description: 'description'
};

exports.Prisma.VaccinesOrderByRelevanceFieldEnum = {
  name: 'name',
  target_disease: 'target_disease',
  batch: 'batch',
  notes: 'notes'
};

exports.Prisma.ManufacturersOrderByRelevanceFieldEnum = {
  name: 'name',
  cnpj: 'cnpj',
  email: 'email',
  phone: 'phone',
  address: 'address',
  country: 'country',
  license_number: 'license_number'
};

exports.Prisma.Types_of_VaccinesOrderByRelevanceFieldEnum = {
  name: 'name',
  description: 'description'
};

exports.Prisma.Status_Vaccine_ApplicationsOrderByRelevanceFieldEnum = {
  name: 'name'
};


exports.Prisma.ModelName = {
  Users: 'Users',
  Roles: 'Roles',
  Farm_Workers: 'Farm_Workers',
  Veterinarians: 'Veterinarians',
  Animals: 'Animals',
  Species: 'Species',
  Breeds: 'Breeds',
  Health_Status: 'Health_Status',
  Vaccines: 'Vaccines',
  Manufacturers: 'Manufacturers',
  Types_of_Vaccines: 'Types_of_Vaccines',
  Applications: 'Applications',
  Status_Vaccine_Applications: 'Status_Vaccine_Applications',
  Locations: 'Locations'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
